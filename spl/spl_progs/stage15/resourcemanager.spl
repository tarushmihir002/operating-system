alias functionNumber R1;
alias currentPID R2;

if (functionNumber == 8) then
    while ([TERMINAL_STATUS_TABLE + 0] == 1) do
        [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE+1] + 4] = WAIT_TERMINAL;
    
        multipush (R1, R2, R3);
        call SCHEDULER;
        multipop (R1, R2, R3);
        
    endwhile;

    [TERMINAL_STATUS_TABLE + 0] = 1;
    [TERMINAL_STATUS_TABLE + 1] = currentPID;

    return;
endif;

if (functionNumber == 9) then
    if (currentPID != [SYSTEM_STATUS_TABLE + 1]) then
        R0 = -1;
        return;
    endif;

    [TERMINAL_STATUS_TABLE] = 0;

    alias counter R10;
    counter = 1;
    while (counter < 16) do
        if ([PROCESS_TABLE + 16*counter + 4] == WAIT_TERMINAL) then
            [PROCESS_TABLE * 16*counter + 4] = READY;
        endif;
        counter = counter + 1;
    endwhile;

    R0 = 0;
    return;
endif;