[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1] * 16) + 11] * 512 - 1;
backup;

alias currentPID R0;
currentPID = [SYSTEM_STATUS_TABLE + 1];

alias process_table_entry R1;
process_table_entry = PROCESS_TABLE + (currentPID * 16);

[process_table_entry + 4] = READY;
[process_table_entry + 12] = (SP % 512);
[process_table_entry + 14] = PTBR;
[process_table_entry + 15] = PTLR;

alias newPID R2;
if (currentPID == 0) then
    newPID = 1;
else 
    newPID = 0;
endif;

[SYSTEM_STATUS_TABLE + 1] = newPID;

alias new_process_table_entry R3;
new_process_table_entry = PROCESS_TABLE + (newPID * 16);

PTBR = [new_process_table_entry + 14];
PTLR = [new_process_table_entry + 15];

SP = [new_process_table_entry + 11] * 512 + [new_process_table_entry + 12];

if ([new_process_table_entry + 4] == CREATED) then
    [new_process_table_entry + 4] = RUNNING;
    SP = [new_process_table_entry + 13];
    ireturn;
endif;

[new_process_table_entry + 4] = RUNNING;

restore;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1] * 16) + 13];

ireturn;
