// saving the current value of stack pointer to process table
// system status table stores the process ID of the current process, and each process table entry is 16 words
// offset = 13 is the User Stack Pointer slot
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16 + 13)] = SP; 

// rewriting the SP to kernel stack base
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16 + 11)] * 512 - 1;

// storing all the registers in the kernel stack
backup;

// print "TIMER";
R0 = [SYSTEM_STATUS_TABLE + 1];
print R0;

// restoring the registers from the kernel stack
restore;

// setting the stack pointer back to the previous user stack value, before returing control to user mode
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16 + 13)];

ireturn;