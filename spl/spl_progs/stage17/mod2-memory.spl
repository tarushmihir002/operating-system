breakpoint;
alias functionNum R1;

// get free page
if (functionNum == 1) then
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;
    while ([SYSTEM_STATUS_TABLE + 2] == 0) do
        [PROCESS_TABLE + 16*[SYSTEM_STATUS_TABLE + 1] + 4] = WAIT_MEM;
        call SCHEDULER;
    endwhile;

    // memory wait count
    [SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1; 

    // memory free count
    [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;

    alias counter R5;
    counter = 76;
    while (counter < 128) do 
        if ([MEMORY_FREE_LIST + counter] == 0) then
            [MEMORY_FREE_LIST + counter] = 1;
            break;
        endif;
        counter = counter + 1;
    endwhile;

    R0 = counter;
    return;
endif;

// release page
if (functionNum == 2) then
    alias pageNumber R2;
    [MEMORY_FREE_LIST + pageNumber] = 0;
    [SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;

    alias counter R5;
    counter = 0;
    while (counter < 16) do
        if ([PROCESS_TABLE + counter*16 + 4] == WAIT_MEM) then
            [PROCESS_TABLE + counter*16 + 4] = READY;
        endif;
        counter = counter + 1;
    endwhile;

    return;
endif;